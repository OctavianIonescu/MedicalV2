// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestSmth2.Data;

#nullable disable

namespace TestSmth2.Migrations.MedicalDb
{
    [DbContext(typeof(MedicalDbContext))]
    [Migration("20230813030500_Initial Medical Migration")]
    partial class InitialMedicalMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AntiBioticEntry", b =>
                {
                    b.Property<Guid>("EntriesID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TagsID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EntriesID", "TagsID");

                    b.HasIndex("TagsID");

                    b.ToTable("AntiBioticEntry");
                });

            modelBuilder.Entity("TestSmth2.Models.Domain.AntiBiotic", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsResistant")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("AntiBiotics");
                });

            modelBuilder.Entity("TestSmth2.Models.Domain.Entry", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Microbe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PathologicProduct")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientCNP")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("URLHandle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("collectionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("entryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("medicSolicitant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sectiaDeProvenienta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("shortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("validationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("PatientCNP");

                    b.ToTable("Entries");
                });

            modelBuilder.Entity("TestSmth2.Models.Domain.Patient", b =>
                {
                    b.Property<string>("PatientCNP")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PatientFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientCNP");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("AntiBioticEntry", b =>
                {
                    b.HasOne("TestSmth2.Models.Domain.Entry", null)
                        .WithMany()
                        .HasForeignKey("EntriesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestSmth2.Models.Domain.AntiBiotic", null)
                        .WithMany()
                        .HasForeignKey("TagsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TestSmth2.Models.Domain.Entry", b =>
                {
                    b.HasOne("TestSmth2.Models.Domain.Patient", "Patient")
                        .WithMany("Entries")
                        .HasForeignKey("PatientCNP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("TestSmth2.Models.Domain.Patient", b =>
                {
                    b.Navigation("Entries");
                });
#pragma warning restore 612, 618
        }
    }
}
