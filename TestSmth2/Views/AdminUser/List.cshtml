@model TestSmth2.Models.ViewModels.UserViewModel

@{
}
<head>
    <style>

        input {
            width: 100%;
            padding: 12px;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box;
            margin-top: 6px;
            margin-bottom: 16px;
        }

            /* Style the submit button */
            input[type=submit] {
                background-color: #04AA6D;
                color: black;
            }

        /* Style the container for inputs */


        /* The message box is shown when the user clicks on the password field */


            #message p {
                padding: 10px 35px;
                font-size: 18px;
            }

        /* Add a green text color and a checkmark when the requirements are right */
        .valid {
            color: green;
        }

            .valid:before {
                position: relative;
                left: -35px;
                content: "&#10004;";
            }

        /* Add a red text color and an "x" icon when the requirements are wrong */
        .invalid {
            color: red;
        }

            .invalid:before {
                position: relative;
                left: -35px;
                content: "&#10006;";
            }
    </style>
</head>

<body>
    <div class="py-2">
        <div class="container">
            <h1>Users - Admin Functionality</h1>
        </div>
    </div>

    <div>
        <div class="container py-5">

            <div class="mb-3 d-flex justify-content-end">
                <button type="button" class="btn btn-light" data-bs-toggle="modal" data-bs-target="#modalCreateUser">
                    Create User
                </button>
            </div>


            @if (Model.Users is not null || Model.Users.Any())
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th>Id</th>
                            <th>Username</th>
                            <th>Email</th>
                            <th> </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in Model.Users)
                        {
                            <tr>
                                <td>@user.Id</td>
                                <td>@user.userName</td>
                                <td>@user.eMail</td>
                                <td>
                                    <form method="post"
                                          asp-controller="AdminUser"
                                          asp-action="Delete"
                                          asp-route-id="@user.Id">
                                        <button class="btn btn-danger" type="submit">Delete</button>
                                    </form>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <p>No users found!</p>
            }



        </div>
    </div>


    <!-- Modal -->
    <form method="post" id="myForm">
        <div class="modal fade" id="modalCreateUser" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog bg-dark">
                <div class="modal-content" style="background-color:rgb(25, 39, 52)">
                    <div class="modal-header">
                        <h1 class="modal-title fs-5" id="exampleModalLabel">Create New User</h1>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label class="form-label">Username</label>
                            <input type="text" id="username" class="form-control" asp-for="Username" required />
                            <span class="text-danger" asp-validation-for="Username"></span>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Email</label>
                            <input type="email" id="email" class="form-control" asp-for="Email" required />
                            <span class="text-danger" asp-validation-for="Email"></span>
                        </div>

                        <div class="mb-3">
                            <label for="psw">Password</label>
                            <input type="password" id="Password" name="Password" asp-for="Password" pattern="(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,}" title="Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters" required>
                            <div class="align-content-center">
                                <div id="message">
                                    <h3>Password must have:</h3>
                                    <p id="letter" class="invalid">A <b>special character</b></p>
                                    <p id="capital" class="invalid">A <b>capital (uppercase)</b> letter</p>
                                    <p id="number" class="invalid">A <b>number</b></p>
                                    <p id="length" class="invalid">Minimum <b>8 characters</b></p>
                                </div>
                            </div>
                        </div>

                        <div class="mb-3">
                            <div class="form-check align-content-center">
                                <input type="checkbox" id="chkUserRole" class="form-check-input" value="User" checked disabled />
                                <label class="form-check-label" for="chkUserRole"> User Role </label>
                            </div>
                        </div>
                        <div class="mb-3">
                            @if (User.IsInRole("SuperAdmin"))
                            {
                                <div class="form-check align-content-center">
                                    <input type="checkbox" id="chkAdminRole" class="form-check-input"
                                           asp-for="AdminRoleCheckbox" />
                                    <label class="form-check-label" for="chkAdminRole"> Admin Role </label>
                                </div>
                            }
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save changes</button>
                    </div>
                </div>
            </div>
        </div>
    </form>

    <script>
        var myInput = document.getElementById("Password");
        var letter = document.getElementById("letter");
        var capital = document.getElementById("capital");
        var number = document.getElementById("number");
        var length = document.getElementById("length");

        // When the user clicks on the password field, show the message box
        myInput.onfocus = function () {
            document.getElementById("message").style.display = "block";
        }

        // When the user clicks outside of the password field, hide the message box
        myInput.onblur = function () {
            document.getElementById("message").style.display = "none";
        }

        // When the user starts to type something inside the password field
        myInput.onkeyup = function () {
            // Validate lowercase letters
            var lowerCaseLetters = /[!@@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/;
            if (myInput.value.match(lowerCaseLetters)) {
                letter.classList.remove("invalid");
                letter.classList.add("valid");
            } else {
                letter.classList.remove("valid");
                letter.classList.add("invalid");
            }

            // Validate capital letters
            var upperCaseLetters = /[A-Z]/g;
            if (myInput.value.match(upperCaseLetters)) {
                capital.classList.remove("invalid");
                capital.classList.add("valid");
            } else {
                capital.classList.remove("valid");
                capital.classList.add("invalid");
            }

            // Validate numbers
            var numbers = /[0-9]/g;
            if (myInput.value.match(numbers)) {
                number.classList.remove("invalid");
                number.classList.add("valid");
            } else {
                number.classList.remove("valid");
                number.classList.add("invalid");
            }

            // Validate length
            if (myInput.value.length >= 8) {
                length.classList.remove("invalid");
                length.classList.add("valid");
            } else {
                length.classList.remove("valid");
                length.classList.add("invalid");
            }
        }
    </script>
</body>

