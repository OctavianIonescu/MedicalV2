@model TestSmth2.Models.ViewModels.BigView
@{
}
<div class="py-2">
    <div class="container">
        <h1>Add New Entry - Admin Functionality</h1>
    </div>
</div>

<div class="container py-5">
    <form method="post">

        <div class="mb-3">
            <label class="form-label">Cod Proba</label>
            <input type="text" class="form-control" id="entryCode" asp-for="OperateEntry.entryCode" />
        </div>

        <div class="mb-3">
            <label class="form-label">CNP Pacient</label>
            <input type="text" class="form-control" id="PatientCNP" asp-for="Patient.PatientCNP" />
        </div>

        <div class="mb-3">
            <label class="form-label">Pacient First Name</label>
            <input type="text" class="form-control" id="PatientFirstName" asp-for="Patient.PatientFirstName" />
        </div>

        <div class="mb-3">
            <label class="form-label">Pacient Last Name</label>
            <input type="text" class="form-control" id="PatientLastName" asp-for="Patient.PatientLastName" />
        </div>

        <div class="mb-3">
            <label class="form-label">Pathologic Product</label>
            <textarea class="form-control" id="PathologicProduct" asp-for="OperateEntry.PathologicProduct"></textarea>
        </div>

        <div class="mb-3">
            <label class="form-label">Microbe</label>
            <input type="text" class="form-control" id="Microbe" asp-for="OperateEntry.Microbe" />
        </div>

        <div class="mb-3">
            <div class="form-check">
                <input class="form-check-input" type="checkbox" name="SelectedType" value="Colony">
                <label class="form-check-label" for="Colony">
                    Colony
                </label>
            </div>
            <div class="form-check">
                <input class="form-check-input" type="checkbox" name="SelectedType" value="Infection">
                <label class="form-check-label" for="Infection">
                    Infection
                </label>
            </div>
        </div>

        <div class="mb-3">
            <label class="form-label">Comment</label>
            <textarea class="form-control" id="shortDescription" asp-for="OperateEntry.shortDescription"></textarea>
        </div>

        <div class="mb-3">
            <label class="form-label">Featured Image Upload</label>
            <input type="file" id="featuredImageUpload" class="form-control" />

		</div>
        <div class="mb-3">
            <embed src="" id="featuredImageDisplay" width="100%" height="100%" />
		</div>

        <div class="mb-3">
            <label class="form-label">Featured Image URL</label>
            <input type="text" class="form-control" id="featuredImageUrl" asp-for="OperateEntry.FileURL" />
        </div>


        <div class="mb-3">
            <label class="form-label">Collection Date</label>
            <input type="date" class="form-control" id="collectionDate" asp-for="OperateEntry.collectionDate" />
        </div>

        <div class="mb-3">
            <label class="form-label">Validation Date</label>
            <input type="date" class="form-control" id="validationDate" asp-for="OperateEntry.validationDate" />
        </div>

        <div class="mb-3">
            <label class="form-label">Origin(Sectia de provenienta)</label>
            <input type="text" class="form-control" id="sectiaDeProvenienta" asp-for="OperateEntry.sectiaDeProvenienta" />
        </div>

        <div class="mb-3">
            <label class="form-label">Doctor</label>
            <input type="text" class="form-control" id="medicSolicitant" asp-for="OperateEntry.medicSolicitant" />
        </div>

        <div class="mb-3">
            <label class="form-label">Antibiotics and Resistance</label>
            <div class="card">
                <div class="card-body">
                    @foreach (var tag in Model.OperateEntry.Antibiotics.OrderBy(s => s.Text))
                    {
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" name="SelectedAntibiotics" value="@tag.Value">
                            <label class="form-check-label" for="@tag.Value">
                                @tag.Text
                            </label>
                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="mb-3">
            <label class="form-label">Resistance Mechanisms</label>
            <div class="card">
                <div class="card-body">
                    @foreach (var res in Model.OperateEntry.Resistance.OrderBy(s => s.Text))
                    {
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" name="SelectedResistance" value="@res.Value">
                            <label class="form-check-label" for="@res.Value">
                                @res.Text
                            </label>
                        </div>
                    }
                </div>
            </div>
        </div>


        <div class="mb-3">
            <button type="submit" class="btn btn-dark" value="Save">
                Save
            </button>
        </div>


    </form>
</div>


@section Scripts {
    <script>
        var editor = new FroalaEditor('#shortDescription', {
            imageUploadURL: '/api/file'
        });


        const featuredUploadElement = document.getElementById('featuredImageUpload');
        const featuredImageUrlElement = document.getElementById('featuredImageUrl');
        const featuredImageDisplayElement = document.getElementById('featuredImageDisplay');


        async function uploadFeaturedImage(e) {
            console.log(e.target.files[0]);

            let data = new FormData();
            data.append('file', e.target.files[0]);

            await fetch('/api/file', {
                method: 'POST',
                headers: {
                    'Accept': '*/*'
                },
                body: data
            }).then(response => response.json())
                .then(result => {
                    featuredImageUrlElement.value = result.link;
                    featuredImageDisplayElement.src = result.link;
                    featuredImageDisplayElement.style.display = 'block';
                });

        }


        featuredUploadElement.addEventListener('change', uploadFeaturedImage);

    </script>
    <script>
        document.addEventListener("Save", function (event) {

            
            var SelectedAntibiotics = [];
            var checkboxes = document.getElementsByName("SelectedAntibiotics");
            for (var i = 0; i < checkboxes.length; i++) {
                if (checkboxes[i].checked) {
                    SelectedAntibiotics.push(checkboxes[i].value);
                }
            }
            @Model.OperateEntry.SelectedAntibiotics = SelectedAntibiotics;

            var SelectedResistance = [];
            var checkboxes1 = document.getElementsByName("SelectedResistance");
            for (var i = 0; i < checkboxes1.length; i++) {
                if (checkboxes1[i].checked) {
                    SelectedResistance.push(checkboxes1[i].value);
                }
            }
            @Model.OperateEntry.SelectedResistance = SelectedResistance;



        });
    </script>
    <script src="https://code.jquery.com/jquery-3.2.1.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#search').keyup(function () {
                var query = $(this).val();
                if (query != '') {
                    $.ajax({
                        url: "search",
                        method: "POST",
                        data: { query: query },
                        success: function (data) {
                            $('#results').html(data);
                        }
                    });
                } else {
                    $('#results').html('');
                }
            });
        });
    </script>

    }